{"version":3,"file":"static/js/930.e35cfe50.chunk.js","mappings":";4JA4BaA,EAiBXC,WAAAA,CACWC,EACAC,EACAC,GAFA,KAAIF,KAAJA,EACA,KAAeC,gBAAfA,EACA,KAAIC,KAAJA,EAnBX,KAAiBC,mBAAG,EAIpB,KAAYC,aAAe,CAAC,EAE5B,KAAAC,kBAA2C,OAE3C,KAAiBC,kBAAwC,KAczDC,oBAAAA,CAAqBC,GAEnB,OADAC,KAAKJ,kBAAoBG,EAClBC,KAGTC,oBAAAA,CAAqBP,GAEnB,OADAM,KAAKN,kBAAoBA,EAClBM,KAGTE,eAAAA,CAAgBC,GAEd,OADAH,KAAKL,aAAeQ,EACbH,KAGTI,0BAAAA,CAA2BC,GAEzB,OADAL,KAAKH,kBAAoBQ,EAClBL,MCnDJ,MAAMM,EAAqB,kBCgBrBC,EAWXjB,WAAAA,CACmBC,EACAiB,GADA,KAAIjB,KAAJA,EACA,KAASiB,UAATA,EAZX,KAASC,UAAwB,KACxB,KAAAC,UAAgD,IAAIC,IACpD,KAAAC,kBAGb,IAAID,IACS,KAAAE,iBACf,IAAIF,IACE,KAAAG,gBAAuD,IAAIH,IAWnEI,GAAAA,CAAIC,GAEF,MAAMC,EAAuBjB,KAAKkB,4BAA4BF,GAE9D,IAAKhB,KAAKY,kBAAkBO,IAAIF,GAAuB,CACrD,MAAMG,EAAW,IAAIC,EAAAA,GAGrB,GAFArB,KAAKY,kBAAkBU,IAAIL,EAAsBG,GAG/CpB,KAAKuB,cAAcN,IACnBjB,KAAKwB,uBAGL,IACE,MAAMC,EAAWzB,KAAK0B,uBAAuB,CAC3CC,mBAAoBV,IAElBQ,GACFL,EAASQ,QAAQH,GAEnB,MAAOI,KAOb,OAAO7B,KAAKY,kBAAkBG,IAAIE,GAAuBa,QAmB3DC,YAAAA,CAAaC,SAKX,MAAMf,EAAuBjB,KAAKkB,4BAChC,OAAAc,QAAA,IAAAA,OAAA,EAAAA,EAAShB,YAELiB,EAAgC,QAArBC,EAAA,OAAAF,QAAA,IAAAA,OAAA,EAAAA,EAASC,gBAAY,IAAAC,GAAAA,EAEtC,IACElC,KAAKuB,cAAcN,KACnBjB,KAAKwB,uBAaA,CAEL,GAAIS,EACF,OAAO,KAEP,MAAME,MAAM,WAAWnC,KAAKT,yBAhB9B,IACE,OAAOS,KAAK0B,uBAAuB,CACjCC,mBAAoBV,IAEtB,MAAOY,GACP,GAAII,EACF,OAAO,KAEP,MAAMJ,GAadO,YAAAA,GACE,OAAOpC,KAAKS,UAGd4B,YAAAA,CAAa5B,GACX,GAAIA,EAAUlB,OAASS,KAAKT,KAC1B,MAAM4C,MACJ,yBAAyB1B,EAAUlB,qBAAqBS,KAAKT,SAIjE,GAAIS,KAAKS,UACP,MAAM0B,MAAM,iBAAiBnC,KAAKT,kCAMpC,GAHAS,KAAKS,UAAYA,EAGZT,KAAKwB,uBAAV,CAKA,GA0NJ,SAA0Cf,GACxC,MAAuC,UAAhCA,EAAUb,iBACnB,CA5NQ0C,CAAiB7B,GACnB,IACET,KAAK0B,uBAAuB,CAAEC,mBAAoBrB,IAClD,MAAOuB,IAWX,IAAK,MACHF,EACAY,KACGvC,KAAKY,kBAAkB4B,UAAW,CACrC,MAAMvB,EACJjB,KAAKkB,4BAA4BS,GAEnC,IAEE,MAAMF,EAAWzB,KAAK0B,uBAAuB,CAC3CC,mBAAoBV,IAEtBsB,EAAiBX,QAAQH,GACzB,MAAOI,OAObY,aAAAA,GAAqD,IAAvCzB,EAAA0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqBpC,EACjCN,KAAKY,kBAAkBiC,OAAO7B,GAC9BhB,KAAKa,iBAAiBgC,OAAO7B,GAC7BhB,KAAKU,UAAUmC,OAAO7B,GAKxB,YAAM6B,GACJ,MAAMC,EAAWC,MAAMC,KAAKhD,KAAKU,UAAUuC,gBAErCC,QAAQC,IAAI,IACbL,EACAM,QAAOC,GAAW,aAAcA,IAEhCC,KAAID,GAAYA,EAAgBE,SAAUV,cAC1CC,EACAM,QAAOC,GAAW,YAAaA,IAE/BC,KAAID,GAAYA,EAAgBG,cAIvCC,cAAAA,GACE,OAAyB,MAAlBzD,KAAKS,UAGdc,aAAAA,GAAqD,IAAvCP,EAAA0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqBpC,EACjC,OAAON,KAAKU,UAAUS,IAAIH,GAG5B0C,UAAAA,GAAkD,IAAvC1C,EAAA0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqBpC,EAC9B,OAAON,KAAKa,iBAAiBE,IAAIC,IAAe,CAAC,EAGnD2C,UAAAA,GAAuC,IAA5BC,EAAAlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA0B,CAAC,EACpC,MAAM,QAAEV,EAAU,CAAC,GAAM4B,EACnB3C,EAAuBjB,KAAKkB,4BAChC0C,EAAKjC,oBAEP,GAAI3B,KAAKuB,cAAcN,GACrB,MAAMkB,MACJ,GAAGnC,KAAKT,QAAQ0B,mCAIpB,IAAKjB,KAAKyD,iBACR,MAAMtB,MAAM,aAAanC,KAAKT,oCAGhC,MAAMkC,EAAWzB,KAAK0B,uBAAuB,CAC3CC,mBAAoBV,EACpBe,YAIF,IAAK,MACHL,EACAY,KACGvC,KAAKY,kBAAkB4B,UAAW,CAGjCvB,IADFjB,KAAKkB,4BAA4BS,IAEjCY,EAAiBX,QAAQH,GAI7B,OAAOA,EAWToC,MAAAA,CAAOxD,EAA6BW,SAClC,MAAMC,EAAuBjB,KAAKkB,4BAA4BF,GACxD8C,EAC0C,QAA9C5B,EAAAlC,KAAKc,gBAAgBC,IAAIE,UAAqB,IAAAiB,EAAAA,EAC9C,IAAI6B,IACND,EAAkBE,IAAI3D,GACtBL,KAAKc,gBAAgBQ,IAAIL,EAAsB6C,GAE/C,MAAMG,EAAmBjE,KAAKU,UAAUK,IAAIE,GAK5C,OAJIgD,GACF5D,EAAS4D,EAAkBhD,GAGtB,KACL6C,EAAkBjB,OAAOxC,EAAS,EAQ9B6D,qBAAAA,CACNzC,EACAT,GAEA,MAAMmD,EAAYnE,KAAKc,gBAAgBC,IAAIC,GAC3C,GAAKmD,EAGL,IAAK,MAAM9D,KAAY8D,EACrB,IACE9D,EAASoB,EAAUT,GACnB,MAAAkB,KAMER,sBAAAA,CAAsB0C,GAM7B,IAN8B,mBAC7BzC,EAAkB,QAClBK,EAAU,CAAC,GAIZoC,EACK3C,EAAWzB,KAAKU,UAAUK,IAAIY,GAClC,IAAKF,GAAYzB,KAAKS,YACpBgB,EAAWzB,KAAKS,UAAUjB,gBAAgBQ,KAAKQ,UAAW,CACxDmB,oBAqD+BX,EArDmBW,EAsDjDX,IAAeV,OAAqBsC,EAAY5B,GArDjDgB,YAEFhC,KAAKU,UAAUY,IAAIK,EAAoBF,GACvCzB,KAAKa,iBAAiBS,IAAIK,EAAoBK,GAO9ChC,KAAKkE,sBAAsBzC,EAAWE,GAOlC3B,KAAKS,UAAUZ,mBACjB,IACEG,KAAKS,UAAUZ,kBACbG,KAAKQ,UACLmB,EACAF,GAEF,MAAAS,IA4BV,IAAuClB,EAtBnC,OAAOS,GAAY,KAGbP,2BAAAA,GACiC,IAAvCF,EAAA0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAqBpC,EAErB,OAAIN,KAAKS,UACAT,KAAKS,UAAUf,kBAAoBsB,EAAaV,EAEhDU,EAIHQ,oBAAAA,GACN,QACIxB,KAAKS,WAC8B,aAArCT,KAAKS,UAAUb,yBCrVRyE,EAGX/E,WAAAA,CAA6BC,GAAA,KAAIA,KAAJA,EAFZ,KAAA+E,UAAY,IAAI3D,IAajC4D,YAAAA,CAA6B9D,GAC3B,MAAM+D,EAAWxE,KAAKyE,YAAYhE,EAAUlB,MAC5C,GAAIiF,EAASf,iBACX,MAAM,IAAItB,MACR,aAAa1B,EAAUlB,yCAAyCS,KAAKT,QAIzEiF,EAASnC,aAAa5B,GAGxBiE,uBAAAA,CAAwCjE,GACrBT,KAAKyE,YAAYhE,EAAUlB,MAC/BkE,kBAEXzD,KAAKsE,UAAUzB,OAAOpC,EAAUlB,MAGlCS,KAAKuE,aAAa9D,GAUpBgE,WAAAA,CAA4BlF,GAC1B,GAAIS,KAAKsE,UAAUnD,IAAI5B,GACrB,OAAOS,KAAKsE,UAAUvD,IAAIxB,GAI5B,MAAMiF,EAAW,IAAIjE,EAAYhB,EAAMS,MAGvC,OAFAA,KAAKsE,UAAUhD,IAAI/B,EAAMiF,GAElBA,EAGTG,YAAAA,GACE,OAAO5B,MAAMC,KAAKhD,KAAKsE,UAAUrB,mLC/ErC,MCiBM2B,EAAoB,SAAUC,GAElC,MAAMC,EAAgB,GACtB,IAAIC,EAAI,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAIlC,OAAQqC,IAAK,CACnC,IAAIC,EAAIJ,EAAIK,WAAWF,GACnBC,EAAI,IACNH,EAAIC,KAAOE,EACFA,EAAI,MACbH,EAAIC,KAAQE,GAAK,EAAK,IACtBH,EAAIC,KAAY,GAAJE,EAAU,KAEL,SAAZ,MAAJA,IACDD,EAAI,EAAIH,EAAIlC,QACyB,SAAZ,MAAxBkC,EAAIK,WAAWF,EAAI,KAGpBC,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBJ,EAAIK,aAAaF,IACvDF,EAAIC,KAAQE,GAAK,GAAM,IACvBH,EAAIC,KAASE,GAAK,GAAM,GAAM,IAC9BH,EAAIC,KAASE,GAAK,EAAK,GAAM,IAC7BH,EAAIC,KAAY,GAAJE,EAAU,MAEtBH,EAAIC,KAAQE,GAAK,GAAM,IACvBH,EAAIC,KAASE,GAAK,EAAK,GAAM,IAC7BH,EAAIC,KAAY,GAAJE,EAAU,IAEzB,CACD,OAAOH,CACT,EA6DaK,EAAiB,CAI5BC,eAAgB,KAKhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBACE,iEAKF,gBAAIC,GACF,OAAOzF,KAAKwF,kBAAoB,KACjC,EAKD,wBAAIE,GACF,OAAO1F,KAAKwF,kBAAoB,KACjC,EASDG,mBAAoC,oBAATC,KAW3BC,eAAAA,CAAgBC,EAA8BC,GAC5C,IAAKhD,MAAMiD,QAAQF,GACjB,MAAM3D,MAAM,iDAGdnC,KAAKiG,QAEL,MAAMC,EAAgBH,EAClB/F,KAAKsF,sBACLtF,KAAKoF,eAEHe,EAAS,GAEf,IAAK,IAAInB,EAAI,EAAGA,EAAIc,EAAMnD,OAAQqC,GAAK,EAAG,CACxC,MAAMoB,EAAQN,EAAMd,GACdqB,EAAYrB,EAAI,EAAIc,EAAMnD,OAC1B2D,EAAQD,EAAYP,EAAMd,EAAI,GAAK,EACnCuB,EAAYvB,EAAI,EAAIc,EAAMnD,OAC1B6D,EAAQD,EAAYT,EAAMd,EAAI,GAAK,EAEnCyB,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EACnD,IAAIK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EAEVD,IACHK,EAAW,GAENP,IACHM,EAAW,KAIfR,EAAOU,KACLX,EAAcO,GACdP,EAAcQ,GACdR,EAAcS,GACdT,EAAcU,GAEjB,CAED,OAAOT,EAAOW,KAAK,GACpB,EAUDC,YAAAA,CAAajB,EAAeC,GAG1B,OAAI/F,KAAK2F,qBAAuBI,EACvBiB,KAAKlB,GAEP9F,KAAK6F,gBAAgBjB,EAAkBkB,GAAQC,EACvD,EAUDkB,YAAAA,CAAanB,EAAeC,GAG1B,OAAI/F,KAAK2F,qBAAuBI,EACvBH,KAAKE,GA5LQ,SAAUoB,GAElC,MAAMpC,EAAgB,GACtB,IAAIqC,EAAM,EACRlC,EAAI,EACN,KAAOkC,EAAMD,EAAMvE,QAAQ,CACzB,MAAMyE,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACPtC,EAAIG,KAAOoC,OAAOC,aAAaF,QAC1B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC/B,MAAMG,EAAKL,EAAMC,KACjBrC,EAAIG,KAAOoC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,EACpD,MAAM,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE/B,MAGMI,IACI,EAALJ,IAAW,IAAa,GAJlBF,EAAMC,OAImB,IAAa,GAHtCD,EAAMC,OAGuC,EAAW,GAFxDD,EAAMC,MAGf,MACFrC,EAAIG,KAAOoC,OAAOC,aAAa,OAAUE,GAAK,KAC9C1C,EAAIG,KAAOoC,OAAOC,aAAa,OAAc,KAAJE,GAC1C,KAAM,CACL,MAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBrC,EAAIG,KAAOoC,OAAOC,cACT,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,EAE3C,CACF,CACD,OAAO3C,EAAIgC,KAAK,GAClB,CA+JWY,CAAkB1H,KAAK2H,wBAAwB7B,EAAOC,GAC9D,EAiBD4B,uBAAAA,CAAwB7B,EAAeC,GACrC/F,KAAKiG,QAEL,MAAM2B,EAAgB7B,EAClB/F,KAAKuF,sBACLvF,KAAKqF,eAEHc,EAAmB,GAEzB,IAAK,IAAInB,EAAI,EAAGA,EAAIc,EAAMnD,QAAU,CAClC,MAAMyD,EAAQwB,EAAc9B,EAAM+B,OAAO7C,MAGnCsB,EADYtB,EAAIc,EAAMnD,OACFiF,EAAc9B,EAAM+B,OAAO7C,IAAM,IACzDA,EAEF,MACMwB,EADYxB,EAAIc,EAAMnD,OACFiF,EAAc9B,EAAM+B,OAAO7C,IAAM,KACzDA,EAEF,MACM8C,EADY9C,EAAIc,EAAMnD,OACFiF,EAAc9B,EAAM+B,OAAO7C,IAAM,GAG3D,KAFEA,EAEW,MAAToB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACrD,MAAM,IAAIC,EAGZ,MAAMtB,EAAYL,GAAS,EAAME,GAAS,EAG1C,GAFAH,EAAOU,KAAKJ,GAEE,KAAVD,EAAc,CAChB,MAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAGnD,GAFAL,EAAOU,KAAKH,GAEE,KAAVoB,EAAc,CAChB,MAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,EACb,CACF,CACF,CAED,OAAOR,CACR,EAODF,KAAAA,GACE,IAAKjG,KAAKoF,eAAgB,CACxBpF,KAAKoF,eAAiB,CAAC,EACvBpF,KAAKqF,eAAiB,CAAC,EACvBrF,KAAKsF,sBAAwB,CAAC,EAC9BtF,KAAKuF,sBAAwB,CAAC,EAG9B,IAAK,IAAIP,EAAI,EAAGA,EAAIhF,KAAKyF,aAAa9C,OAAQqC,IAC5ChF,KAAKoF,eAAeJ,GAAKhF,KAAKyF,aAAaoC,OAAO7C,GAClDhF,KAAKqF,eAAerF,KAAKoF,eAAeJ,IAAMA,EAC9ChF,KAAKsF,sBAAsBN,GAAKhF,KAAK0F,qBAAqBmC,OAAO7C,GACjEhF,KAAKuF,sBAAsBvF,KAAKsF,sBAAsBN,IAAMA,EAGxDA,GAAKhF,KAAKwF,kBAAkB7C,SAC9B3C,KAAKqF,eAAerF,KAAK0F,qBAAqBmC,OAAO7C,IAAMA,EAC3DhF,KAAKuF,sBAAsBvF,KAAKyF,aAAaoC,OAAO7C,IAAMA,EAG/D,CACF,GAMG,MAAO+C,UAAgC5F,MAA7C7C,WAAAA,uBACW,KAAIC,KAAG,yBACjB,EAKM,MASMyI,EAAgC,SAAUnD,GAErD,OAX0B,SAAUA,GACpC,MAAMoD,EAAYrD,EAAkBC,GACpC,OAAOM,EAAOU,gBAAgBoC,GAAW,EAC3C,CAQSC,CAAarD,GAAKsD,QAAQ,MAAO,GAC1C,EAWaC,EAAe,SAAUvD,GACpC,IACE,OAAOM,EAAO8B,aAAapC,GAAK,EACjC,CAAC,MAAOhD,GACPwG,QAAQC,MAAM,wBAAyBzG,EACxC,CACD,OAAO,IACT,EChUA,MAAM0G,EAAwBA,eCjC5B,GAAoB,qBAATC,KACT,OAAOA,KAET,GAAsB,qBAAXC,OACT,OAAOA,OAET,GAAsB,qBAAXC,EAAAA,EACT,OAAOA,EAAAA,EAET,MAAM,IAAIvG,MAAM,kCAClB,CDwBEwG,GAAYC,sBA2CDC,EAAcA,KACzB,IACE,OAEEN,KArC6BO,MACjC,GAAuB,qBAAZC,QACT,OAEF,MAAMC,EAAqBD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYH,sBACvC,OAAII,EACKC,KAAKC,MAAMF,QADpB,CAEC,EA+BGF,IA5BwBK,MAC5B,GAAwB,qBAAbC,SACT,OAEF,IAAIC,EACJ,IACEA,EAAQD,SAASE,OAAOD,MAAM,gCAC/B,CAAC,MAAOxH,GAGP,MACD,CACD,MAAM0H,EAAUF,GAASjB,EAAaiB,EAAM,IAC5C,OAAOE,GAAWN,KAAKC,MAAMK,EAAQ,EAgBjCJ,EAEH,CAAC,MAAOtH,GAQP,YADAwG,QAAQmB,KAAK,+CAA+C3H,IAE7D,GAmBU4H,EACXC,IAEA,MAAMC,EAZND,KACuB,IAAAxH,EAAA0H,EAAA,OAA4B,QAA5BA,EAAe,QAAf1H,EAAA2G,WAAe,IAAA3G,OAAA,EAAAA,EAAA2H,qBAAa,IAAAD,OAAA,EAAAA,EAAGF,EAAY,EAWrDI,CAAuBJ,GACpC,IAAKC,EACH,OAEF,MAAMI,EAAiBJ,EAAKK,YAAY,KACxC,GAAID,GAAkB,GAAKA,EAAiB,IAAMJ,EAAKhH,OACrD,MAAM,IAAIR,MAAM,gBAAgBwH,yCAGlC,MAAMM,EAAOC,SAASP,EAAKQ,UAAUJ,EAAiB,GAAI,IAC1D,MAAgB,MAAZJ,EAAK,GAEA,CAACA,EAAKQ,UAAU,EAAGJ,EAAiB,GAAIE,GAExC,CAACN,EAAKQ,UAAU,EAAGJ,GAAiBE,EAC5C,EAOUG,EAAsBA,KAAyC,IAAAlI,EAC1E,OAAa,QAAbA,EAAA2G,WAAa,IAAA3G,OAAA,EAAAA,EAAEmI,MAAM,QEjJVhJ,EAIX/B,WAAAA,GAFA,KAAAgL,OAAoC,OACpC,KAAA1I,QAAqC,OAEnC5B,KAAK8B,QAAU,IAAIoB,SAAQ,CAACtB,EAAS0I,KACnCtK,KAAK4B,QAAUA,EACf5B,KAAKsK,OAASA,CAAmC,GAEpD,CAODC,YAAAA,CACElK,GAEA,MAAO,CAACiI,EAAOkC,KACTlC,EACFtI,KAAKsK,OAAOhC,GAEZtI,KAAK4B,QAAQ4I,GAES,oBAAbnK,IAGTL,KAAK8B,QAAQ2I,OAAM,SAIK,IAApBpK,EAASsC,OACXtC,EAASiI,GAETjI,EAASiI,EAAOkC,GAEnB,CAEJ,ECsCa,SAAAE,EACdC,EACAC,GAEA,GAAID,EAAME,IACR,MAAM,IAAI1I,MACR,gHAIJ,MAKM2I,EAAUF,GAAa,eACvBG,EAAMJ,EAAMI,KAAO,EACnBC,EAAML,EAAMK,KAAOL,EAAMM,QAC/B,IAAKD,EACH,MAAM,IAAI7I,MAAM,wDAGlB,MAAM+I,EAAOC,OAAAC,OAAA,CAEXC,IAAK,kCAAkCP,IACvCQ,IAAKR,EACLC,MACAQ,IAAKR,EAAM,KACXS,UAAWT,EACXC,MACAC,QAASD,EACTS,SAAU,CACRC,iBAAkB,SAClBC,WAAY,CAAE,IAIbhB,GAKL,MAAO,CACL3C,EAA8BiB,KAAK2C,UAjCtB,CACbC,IAAK,OACLpM,KAAM,SAgCNuI,EAA8BiB,KAAK2C,UAAUV,IAH7B,IAKhBpE,KAAK,IACT,UChHgBgF,IACd,MACuB,qBAAdC,WAC2B,kBAA3BA,UAAqB,UAErBA,UAAqB,UAErB,EAEX,UAgDgBC,IACd,MAAyB,qBAAXvD,QAA0BwD,GAC1C,UAKgBA,IACd,MAC+B,qBAAtBC,mBACS,qBAAT1D,MACPA,gBAAgB0D,iBAEpB,UAmEgBC,IACd,wBAvGA,MAAMC,EAAgC,QAAblK,EAAA2G,WAAa,IAAA3G,OAAA,EAAAA,EAAEkK,iBACxC,GAAyB,SAArBA,EACF,OAAO,EACF,GAAyB,YAArBA,EACT,OAAO,EAGT,IACE,MACqD,qBAAnDjB,OAAOkB,UAAUC,SAASC,KAAK7D,EAAAA,EAAOK,QAEzC,CAAC,MAAOlH,GACP,OAAO,CACR,CACH,CA0FK2K,MACCT,UAAUU,WACZV,UAAUU,UAAUC,SAAS,YAC5BX,UAAUU,UAAUC,SAAS,SAElC,UAMgBC,IACd,IACE,MAA4B,kBAAdC,SACf,CAAC,MAAO/K,GACP,OAAO,CACR,CACH,UASgBgL,IACd,OAAO,IAAI3J,SAAQ,CAACtB,EAAS0I,KAC3B,IACE,IAAIwC,GAAoB,EACxB,MAAMC,EACJ,0DACIC,EAAUxE,KAAKoE,UAAUK,KAAKF,GACpCC,EAAQE,UAAY,KAClBF,EAAQG,OAAOC,QAEVN,GACHtE,KAAKoE,UAAUS,eAAeN,GAEhCnL,GAAQ,EAAK,EAEfoL,EAAQM,gBAAkB,KACxBR,GAAW,CAAK,EAGlBE,EAAQO,QAAU,WAChBjD,GAAoB,QAAbpI,EAAA8K,EAAQ1E,aAAK,IAAApG,OAAA,EAAAA,EAAEsL,UAAW,GAAG,CAEvC,CAAC,MAAOlF,GACPgC,EAAOhC,EACR,IAEL,CCnJM,MAAOmF,UAAsBtL,MAIjC7C,WAAAA,CAEWoO,EACTF,EAEOG,GAEPC,MAAMJ,GALG,KAAIE,KAAJA,EAGF,KAAUC,WAAVA,EAPA,KAAIpO,KAdI,gBA6Bf4L,OAAO0C,eAAe7N,KAAMyN,EAAcpB,WAItClK,MAAM2L,mBACR3L,MAAM2L,kBAAkB9N,KAAM+N,EAAa1B,UAAU2B,OAExD,QAGUD,EAIXzO,WAAAA,CACmB+D,EACA4K,EACAC,GAFA,KAAO7K,QAAPA,EACA,KAAW4K,YAAXA,EACA,KAAMC,OAANA,CACf,CAEJF,MAAAA,CACEN,GAGA,MAAMC,GAAcjL,UAAAC,QAAA,OAAAC,EAAAF,UAAA,KAAyB,CAAC,EACxCyL,EAAW,GAAGnO,KAAKqD,WAAWqK,IAC9BU,EAAWpO,KAAKkO,OAAOR,GAEvBF,EAAUY,EAUpB,SAAyBA,EAAkBC,GACzC,OAAOD,EAASjG,QAAQmG,GAAS,CAACC,EAAGC,KACnC,MAAMhE,EAAQ6D,EAAKG,GACnB,OAAgB,MAAThE,EAAgBnD,OAAOmD,GAAS,IAAIgE,KAAO,GAEtD,CAf+BC,CAAgBL,EAAUT,GAAc,QAE7De,EAAc,GAAG1O,KAAKiO,gBAAgBT,MAAYW,MAIxD,OAFc,IAAIV,EAAcU,EAAUO,EAAaf,EAGxD,EAUH,MAAMW,EAAU,gBC7EA,SAAAK,EAAUC,EAAWC,GACnC,GAAID,IAAMC,EACR,OAAO,EAGT,MAAMC,EAAQ3D,OAAO4D,KAAKH,GACpBI,EAAQ7D,OAAO4D,KAAKF,GAC1B,IAAK,MAAMI,KAAKH,EAAO,CACrB,IAAKE,EAAMtC,SAASuC,GAClB,OAAO,EAGT,MAAMC,EAASN,EAA8BK,GACvCE,EAASN,EAA8BI,GAC7C,GAAIG,EAASF,IAAUE,EAASD,IAC9B,IAAKR,EAAUO,EAAOC,GACpB,OAAO,OAEJ,GAAID,IAAUC,EACnB,OAAO,CAEV,CAED,IAAK,MAAMF,KAAKD,EACd,IAAKF,EAAMpC,SAASuC,GAClB,OAAO,EAGX,OAAO,CACT,CAEA,SAASG,EAASC,GAChB,OAAiB,OAAVA,GAAmC,kBAAVA,CAClC,CCtEM,SAAUC,EACdjM,GAEA,OAAIA,GAAYA,EAA+BkM,UACrClM,EAA+BkM,UAEhClM,CAEX,wRC3BA,IAAImM,EACAC,EAqBJ,MAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QA0DlC,IAAIK,EAAgB,CAChBjP,GAAAA,CAAIkP,EAAQC,EAAMC,GACd,GAAIF,aAAkBG,eAAgB,CAElC,GAAa,SAATF,EACA,OAAON,EAAmB7O,IAAIkP,GAElC,GAAa,qBAATC,EACA,OAAOD,EAAOI,kBAAoBR,EAAyB9O,IAAIkP,GAGnE,GAAa,UAATC,EACA,OAAOC,EAASE,iBAAiB,QAC3BzN,EACAuN,EAASG,YAAYH,EAASE,iBAAiB,GAE7D,CAEA,OAAOE,EAAKN,EAAOC,GACvB,EACA5O,IAAGA,CAAC2O,EAAQC,EAAM1F,KACdyF,EAAOC,GAAQ1F,GACR,GAEXrJ,IAAGA,CAAC8O,EAAQC,IACJD,aAAkBG,iBACR,SAATF,GAA4B,UAATA,IAGjBA,KAAQD,GAMvB,SAASO,EAAaC,GAIlB,OAAIA,IAASC,YAAYrE,UAAUsE,aAC7B,qBAAsBP,eAAe/D,WA7GnCoD,IACHA,EAAuB,CACpBmB,UAAUvE,UAAUwE,QACpBD,UAAUvE,UAAUyE,SACpBF,UAAUvE,UAAU0E,sBAqHErE,SAAS+D,GAC5B,WAAmB,QAAAO,EAAAtO,UAAAC,OAANsO,EAAI,IAAAlO,MAAAiO,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAxO,UAAAwO,GAIpB,OADAT,EAAKU,MAAMC,EAAOpR,MAAOiR,GAClBV,EAAKb,EAAiB3O,IAAIf,MACrC,EAEG,WAAmB,QAAAqR,EAAA3O,UAAAC,OAANsO,EAAI,IAAAlO,MAAAsO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJL,EAAIK,GAAA5O,UAAA4O,GAGpB,OAAOf,EAAKE,EAAKU,MAAMC,EAAOpR,MAAOiR,GACzC,EAvBW,SAAUM,GAAqB,QAAAC,EAAA9O,UAAAC,OAANsO,EAAI,IAAAlO,MAAAyO,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJR,EAAIQ,EAAA,GAAA/O,UAAA+O,GAChC,MAAMC,EAAKjB,EAAKlE,KAAK6E,EAAOpR,MAAOuR,KAAeN,GAElD,OADApB,EAAyBvO,IAAIoQ,EAAIH,EAAWI,KAAOJ,EAAWI,OAAS,CAACJ,IACjEhB,EAAKmB,EAChB,CAoBR,CACA,SAASE,EAAuBpH,GAC5B,MAAqB,oBAAVA,EACAgG,EAAahG,IAGpBA,aAAiB4F,gBAhGzB,SAAwCsB,GAEpC,GAAI9B,EAAmBzO,IAAIuQ,GACvB,OACJ,MAAMG,EAAO,IAAI3O,SAAQ,CAACtB,EAAS0I,KAC/B,MAAMwH,EAAWA,KACbJ,EAAGK,oBAAoB,WAAYC,GACnCN,EAAGK,oBAAoB,QAASzJ,GAChCoJ,EAAGK,oBAAoB,QAASzJ,EAAM,EAEpC0J,EAAWA,KACbpQ,IACAkQ,GAAU,EAERxJ,EAAQA,KACVgC,EAAOoH,EAAGpJ,OAAS,IAAI2J,aAAa,aAAc,eAClDH,GAAU,EAEdJ,EAAGQ,iBAAiB,WAAYF,GAChCN,EAAGQ,iBAAiB,QAAS5J,GAC7BoJ,EAAGQ,iBAAiB,QAAS5J,EAAM,IAGvCsH,EAAmBtO,IAAIoQ,EAAIG,EAC/B,CAyEQM,CAA+B3H,GA9JhB4H,EA+JD5H,GAzJVgF,IACHA,EAAoB,CACjBkB,YACA2B,eACAC,SACA1B,UACAR,kBAZiDmC,MAAMtN,GAAMmN,aAAkBnN,IAgK5E,IAAIuN,MAAMhI,EAAOwF,GAErBxF,GAlKWiI,IAACL,CAmKvB,CACA,SAAS7B,EAAK/F,GAGV,GAAIA,aAAiBkI,WACjB,OA3IR,SAA0B1F,GACtB,MAAMlL,EAAU,IAAIoB,SAAQ,CAACtB,EAAS0I,KAClC,MAAMwH,EAAWA,KACb9E,EAAQ+E,oBAAoB,UAAWY,GACvC3F,EAAQ+E,oBAAoB,QAASzJ,EAAM,EAEzCqK,EAAUA,KACZ/Q,EAAQ2O,EAAKvD,EAAQG,SACrB2E,GAAU,EAERxJ,EAAQA,KACVgC,EAAO0C,EAAQ1E,OACfwJ,GAAU,EAEd9E,EAAQkF,iBAAiB,UAAWS,GACpC3F,EAAQkF,iBAAiB,QAAS5J,EAAM,IAe5C,OAbAxG,EACK8Q,MAAMpI,IAGHA,aAAiBoG,WACjBlB,EAAiBpO,IAAIkJ,EAAOwC,EAChC,IAGCvC,OAAM,SAGXsF,EAAsBzO,IAAIQ,EAASkL,GAC5BlL,CACX,CA4Ge+Q,CAAiBrI,GAG5B,GAAIsF,EAAe3O,IAAIqJ,GACnB,OAAOsF,EAAe/O,IAAIyJ,GAC9B,MAAMsI,EAAWlB,EAAuBpH,GAOxC,OAJIsI,IAAatI,IACbsF,EAAexO,IAAIkJ,EAAOsI,GAC1B/C,EAAsBzO,IAAIwR,EAAUtI,IAEjCsI,CACX,CACA,MAAM1B,EAAU5G,GAAUuF,EAAsBhP,IAAIyJ,GCrIpD,MAAMuI,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAItS,IAC1B,SAASuS,EAAUjD,EAAQC,GACvB,KAAMD,aAAkBS,cAClBR,KAAQD,GACM,kBAATC,EACP,OAEJ,GAAI+C,EAAclS,IAAImP,GAClB,OAAO+C,EAAclS,IAAImP,GAC7B,MAAMiD,EAAiBjD,EAAK/H,QAAQ,aAAc,IAC5CiL,EAAWlD,IAASiD,EACpBE,EAAUL,EAAatG,SAASyG,GACtC,KAEEA,KAAmBC,EAAWd,SAAWD,gBAAgBhG,aACrDgH,IAAWN,EAAYrG,SAASyG,GAClC,OAEJ,MAAMG,EAASC,eAAgBC,GAE3B,MAAM9B,EAAK1R,KAAK2Q,YAAY6C,EAAWH,EAAU,YAAc,YAC/D,IAAIpD,EAASyB,EAAG+B,MAAM,QAAAjC,EAAA9O,UAAAC,OAHmBsO,EAAI,IAAAlO,MAAAyO,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJR,EAAIQ,EAAA,GAAA/O,UAAA+O,GAW7C,OAPI2B,IACAnD,EAASA,EAAOyD,MAAMzC,EAAK0C,iBAMjBzQ,QAAQC,IAAI,CACtB8M,EAAOkD,MAAmBlC,GAC1BoC,GAAW3B,EAAGG,QACd,EACR,EAEA,OADAoB,EAAc3R,IAAI4O,EAAMoD,GACjBA,CACX,CDgCItD,EC/BU4D,KAAQ,IACfA,EACH7S,IAAKA,CAACkP,EAAQC,EAAMC,IAAa+C,EAAUjD,EAAQC,IAAS0D,EAAS7S,IAAIkP,EAAQC,EAAMC,GACvFhP,IAAKA,CAAC8O,EAAQC,MAAWgD,EAAUjD,EAAQC,IAAS0D,EAASzS,IAAI8O,EAAQC,KD4BzD7P,CAAS2P,SE9FhB6D,EACXvU,WAAAA,CAA6BkB,GAAA,KAASA,UAATA,EAG7BsT,qBAAAA,GAIE,OAHkB9T,KAAKQ,UAAUmE,eAI9BrB,KAAIkB,IACH,GAmBR,SAAkCA,GAChC,MAAM/D,EAAY+D,EAASpC,eAC3B,MAAsB,aAAf,OAAA3B,QAAS,IAATA,OAAS,EAATA,EAAWhB,KACpB,CAtBYsU,CAAyBvP,GAAW,CACtC,MAAMnB,EAAUmB,EAASzC,eACzB,MAAO,GAAGsB,EAAQ2Q,WAAW3Q,EAAQ4Q,UAErC,OAAO,QAGV7Q,QAAO8Q,GAAaA,IACpBpN,KAAK,yCCxBCqN,EAAS,IAAIC,EAAAA,GAAO,0sBC+BpB9T,EAAqB,YAErB+T,EAAsB,CACjC,CAACC,GAAU,YACX,CAACC,GAAgB,mBACjB,CAACC,GAAgB,iBACjB,CAACC,GAAsB,wBACvB,CAACC,GAAe,iBAChB,CAACC,GAAqB,wBACtB,CAACC,GAAW,YACZ,CAACC,GAAiB,mBAClB,CAACC,GAAe,YAChB,CAACC,GAAkB,oBACnB,CAACC,GAAqB,mBACtB,CAACC,GAAgB,UACjB,CAACC,GAAsB,iBACvB,CAACC,GAAoB,WACrB,CAACC,GAA0B,kBAC3B,CAACC,GAAgB,WACjB,CAACC,GAAsB,kBACvB,CAACC,GAAkB,YACnB,CAACC,GAAwB,mBACzB,CAACC,GAAmB,UACpB,CAACC,GAAyB,iBAC1B,CAACC,GAAc,WACf,CAACC,GAAoB,kBACrB,CAACC,GAAgB,WACjB,CAACC,GAAsB,kBACvB,CAACC,GAAa,cACd,UAAW,UACX,CAACxW,GAAc,eCjDJyW,GAAQ,IAAIrV,IAKZsV,GAAc,IAAItV,IAQlBuV,GAAc,IAAIvV,IAOf,SAAAwV,GACdC,EACA3V,GAEA,IACG2V,EAAwB5V,UAAU+D,aAAa9D,GAChD,MAAOoB,GACPsS,EAAOkC,MACL,aAAa5V,EAAUlB,4CAA4C6W,EAAI7W,OACvEsC,GAGN,CAMgB,SAAAyU,GACdF,EACA3V,GAEC2V,EAAwB5V,UAAUkE,wBAAwBjE,EAC7D,CASM,SAAU8V,GACd9V,GAEA,MAAM+V,EAAgB/V,EAAUlB,KAChC,GAAI2W,GAAY/U,IAAIqV,GAKlB,OAJArC,EAAOkC,MACL,sDAAsDG,OAGjD,EAGTN,GAAY5U,IAAIkV,EAAe/V,GAG/B,IAAK,MAAM2V,KAAOJ,GAAM/S,SACtBkT,GAAcC,EAAwB3V,GAGxC,IAAK,MAAMgW,KAAaR,GAAYhT,SAClCkT,GAAcM,EAAoChW,GAGpD,OAAO,CACT,CAWgB,SAAAiW,GACdN,EACA7W,GAEA,MAAMoX,EAAuBP,EAAwB5V,UAClDiE,YAAY,aACZ1C,aAAa,CAAEE,UAAU,IAI5B,OAHI0U,GACGA,EAAoBC,mBAEnBR,EAAwB5V,UAAUiE,YAAYlF,EACxD,CAUM,SAAUsX,GACdT,EACA7W,GAC+C,IAA/CoC,EAAAe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA6BpC,EAE7BoW,GAAaN,EAAK7W,GAAMkD,cAAcd,EACxC,CAUM,SAAUmV,GACdC,GAEA,YAAwCnU,IAAhCmU,EAAoB/U,OAC9B,CAUM,SAAUgV,GACdD,GAEA,OAAY,OAARA,QAAwBnU,IAARmU,QAG2BnU,IAAvCmU,EAA0BE,QACpC,UAOgBC,KACdhB,GAAYiB,OACd,CCrJA,MAAMC,GAA6B,CACjC,SACE,6EAEF,eAAyB,iCACzB,gBACE,kFACF,cAAwB,kDACxB,qBAA+B,uCAC/B,aACE,0EACF,uBACE,6EAEF,uBACE,wDACF,WACE,gFACF,UACE,qFACF,UACE,mFACF,aACE,sFACF,sCACE,0GACF,iCACE,6DAgBSC,GAAgB,IAAItJ,EAAAA,GAC/B,MACA,WACAqJ,UCrDWE,GAcXhY,WAAAA,CACE0C,EACAqI,EACA7J,GANQ,KAAU+W,YAAG,EAQrBvX,KAAKwX,SAAgBrM,OAAAC,OAAA,GAAApJ,GACrBhC,KAAKyX,QAAetM,OAAAC,OAAA,GAAAf,GACpBrK,KAAK0X,MAAQrN,EAAO9K,KACpBS,KAAK2X,gCACHtN,EAAOuN,+BACT5X,KAAK6X,WAAarX,EAClBR,KAAKQ,UAAU+D,aACb,IAAIlF,EAAAA,GAAU,OAAO,IAAMW,MAAM,WAIrC,kCAAI4X,GAEF,OADA5X,KAAK8X,iBACE9X,KAAK2X,gCAGd,kCAAIC,CAA+BG,GACjC/X,KAAK8X,iBACL9X,KAAK2X,gCAAkCI,EAGzC,QAAIxY,GAEF,OADAS,KAAK8X,iBACE9X,KAAK0X,MAGd,WAAI1V,GAEF,OADAhC,KAAK8X,iBACE9X,KAAKwX,SAGd,UAAInN,GAEF,OADArK,KAAK8X,iBACE9X,KAAKyX,QAGd,aAAIjX,GACF,OAAOR,KAAK6X,WAGd,aAAIG,GACF,OAAOhY,KAAKuX,WAGd,aAAIS,CAAUD,GACZ/X,KAAKuX,WAAaQ,EAOVD,cAAAA,GACR,GAAI9X,KAAKgY,UACP,MAAMX,GAAcrJ,OAAO,cAAsB,CAAEiK,QAASjY,KAAK0X,SCrEvE,SAASQ,GAAiBC,EAAqBC,GAC7C,MAAMC,GAAajQ,EAAAA,EAAAA,GAAa+P,EAAYG,MAAM,KAAK,IACvD,GAAmB,OAAfD,EAIF,YAHAhQ,QAAQC,MACN,qBAAqB8P,kDAKzB,QAAiBxV,IADAqG,KAAKC,MAAMmP,GAAY9M,IAKtC,YAHAlD,QAAQC,MACN,qBAAqB8P,sDAIgB,IAA7BnP,KAAKC,MAAMmP,GAAY9M,KACvB,IAAIgN,MAAOC,WAEX,GACVnQ,QAAQC,MACN,qBAAqB8P,uCAG3B,CAEM,MAAOK,WACHnB,GAORhY,WAAAA,CACE0C,EACA0W,EACAnZ,EACAiB,GAGA,MAAMoX,OAC4ChV,IAAhD8V,EAAad,gCACTc,EAAad,+BAIbvN,EAAwC,CAC5C9K,OACAqY,kCAGF,QAA4ChV,IAAvCZ,EAA4B2W,OAE/B/K,MAAM5L,EAA4BqI,EAAQ7J,OACrC,CAELoN,MADiC5L,EACnBA,QAASqI,EAAQ7J,GAIjCR,KAAK4Y,cAAazN,OAAAC,OAAA,CAChBwM,kCACGc,GAID1Y,KAAK4Y,cAAcC,aACrBX,GAAiBlY,KAAK4Y,cAAcC,YAAa,eAI/C7Y,KAAK4Y,cAAcE,eACrBZ,GAAiBlY,KAAK4Y,cAAcE,cAAe,iBAGrD9Y,KAAK+Y,sBAAwB,KACO,qBAAzBC,uBACThZ,KAAK+Y,sBAAwB,IAAIC,sBAAqB,KACpDhZ,KAAKiZ,kBAAkB,KAI3BjZ,KAAKkZ,UAAY,EACjBlZ,KAAKmZ,YAAYnZ,KAAK4Y,cAAcQ,gBAIpCpZ,KAAK4Y,cAAcQ,oBAAiBxW,EACpC8V,EAAaU,oBAAiBxW,EAE9ByW,GAAgB/E,EAAagF,EAAS,aAGxCC,MAAAA,IAIA,YAAIC,GACF,OAAOxZ,KAAKkZ,UAKdC,WAAAA,CAAYpC,GACN/W,KAAKgY,YAGThY,KAAKkZ,iBACOtW,IAARmU,GAAoD,OAA/B/W,KAAK+Y,uBAC5B/Y,KAAK+Y,sBAAsBU,SAAS1C,EAAK/W,OAK7C0Z,WAAAA,GACE,OAAI1Z,KAAKgY,UACA,IAEAhY,KAAKkZ,UAMRD,gBAAAA,GACDU,GAAU3Z,MAGjB,YAAIiX,GAEF,OADAjX,KAAK8X,iBACE9X,KAAK4Y,cAOJd,cAAAA,GACR,GAAI9X,KAAKgY,UACP,MAAMX,GAAcrJ,OAAO,uBC5G1B,MAAM4L,qBAoEGC,GACdrC,GACc,IAAdsC,EAASpX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAETV,EAAUwV,EAEd,GAAyB,kBAAdsC,EAAwB,CAEjCA,EAAY,CAAEva,KADDua,GAIf,MAAMzP,EAAMc,OAAAC,OAAA,CACV7L,KAAMe,EACNsX,gCAAgC,GAC7BkC,GAECva,EAAO8K,EAAO9K,KAEpB,GAAoB,kBAATA,IAAsBA,EAC/B,MAAM8X,GAAcrJ,OAA8B,gBAChDiK,QAAS5Q,OAAO9H,KAMpB,GAFAyC,IAAAA,GAAYoI,EAAAA,EAAAA,QAEPpI,EACH,MAAMqV,GAAcrJ,OAAO,cAG7B,MAAM+L,EAAc/D,GAAMjV,IAAIxB,GAC9B,GAAIwa,EAAa,CAEf,IACEpL,EAAAA,EAAAA,IAAU3M,EAAS+X,EAAY/X,WAC/B2M,EAAAA,EAAAA,IAAUtE,EAAQ0P,EAAY1P,QAE9B,OAAO0P,EAEP,MAAM1C,GAAcrJ,OAA+B,iBAAEiK,QAAS1Y,IAIlE,MAAMiB,EAAY,IAAI6D,EAAAA,GAAmB9E,GACzC,IAAK,MAAMkB,KAAayV,GAAYjT,SAClCzC,EAAU+D,aAAa9D,GAGzB,MAAMuZ,EAAS,IAAI1C,GAAgBtV,EAASqI,EAAQ7J,GAIpD,OAFAwV,GAAM1U,IAAI/B,EAAMya,GAETA,CACT,CAgDgB,SAAAC,GACdzC,EACA0C,GAEA,IAAIlO,EAAAA,EAAAA,SAAgBC,EAAAA,EAAAA,MAElB,MAAMoL,GAAcrJ,OAAO,kCAO7B,IAAImM,OAJoDvX,IAApDsX,EAAiBtC,iCACnBsC,EAAiBtC,gCAAiC,GAKlDuC,EADErD,GAAeU,GACJA,EAASxV,QAETwV,EAIf,MAAM4C,EACDjP,OAAAC,OAAAD,OAAAC,OAAA,GAAA8O,GACAC,QAK0BvX,IAA3BwX,EAAQhB,uBACHgB,EAAQhB,eAUjB,QAAwCxW,IAApCsX,EAAiBd,gBACiB,qBAAzBJ,qBACT,MAAM3B,GAAcrJ,OAElB,0CAKN,MAAMqM,EAAa,IAhBDC,EAgBerR,KAAK2C,UAAUwO,GAfvC,IAAIE,GAAGC,QACZ,CAACC,EAAMvV,IAAOwV,KAAKC,KAAK,GAAIF,GAAQvV,EAAEC,WAAW,GAAM,GACvD,IAHcoV,MAiBlB,MAAMP,EAAc9D,GAAYlV,IAAIsZ,GACpC,GAAIN,EAIF,OAHCA,EAAsCZ,YACrCe,EAAiBd,gBAEZW,EAGT,MAAMvZ,EAAY,IAAI6D,EAAAA,GAAmBgW,GACzC,IAAK,MAAM5Z,KAAayV,GAAYjT,SAClCzC,EAAU+D,aAAa9D,GAGzB,MAAMuZ,EAAS,IAAIvB,GACjB0B,EACAD,EACAG,EACA7Z,GAKF,OAFAyV,GAAY3U,IAAI+Y,EAAYL,GAErBA,CACT,CA+BgB,SAAAW,KAAwC,IAAjCpb,EAAAmD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAepC,EACpC,MAAM8V,EAAMJ,GAAMjV,IAAIxB,GACtB,IAAK6W,GAAO7W,IAASe,IAAsB8J,EAAAA,EAAAA,MACzC,OAAOyP,KAET,IAAKzD,EACH,MAAMiB,GAAcrJ,OAAwB,UAAEiK,QAAS1Y,IAGzD,OAAO6W,CACT,UAMgBwE,KACd,OAAO7X,MAAMC,KAAKgT,GAAM/S,SAC1B,CAmBOsQ,eAAeoG,GAAUvD,GAC9B,IAAIyE,GAAmB,EACvB,MAAMtb,EAAO6W,EAAI7W,KACjB,GAAIyW,GAAM7U,IAAI5B,GACZsb,GAAmB,EACnB7E,GAAMnT,OAAOtD,QACR,GAAI0W,GAAY9U,IAAI5B,GAAO,CACN6W,EACJsD,eAAiB,IACrCzD,GAAYpT,OAAOtD,GACnBsb,GAAmB,GAInBA,UACI3X,QAAQC,IACXiT,EAAwB5V,UACtBmE,eACArB,KAAIkB,GAAYA,EAAS3B,YAE7BuT,EAAwB4B,WAAY,EAEzC,UAUgBqB,GACdyB,EACA7G,EACA8G,SAIA,IAAI/G,EAAmD,QAAzC9R,EAAAmS,EAAoByG,UAAqB,IAAA5Y,EAAAA,EAAA4Y,EACnDC,IACF/G,GAAW,IAAI+G,KAEjB,MAAMC,EAAkBhH,EAAQ3K,MAAM,SAChC4R,EAAkBhH,EAAQ5K,MAAM,SACtC,GAAI2R,GAAmBC,EAAiB,CACtC,MAAMC,EAAU,CACd,+BAA+BlH,oBAA0BC,OAgB3D,OAdI+G,GACFE,EAAQrU,KACN,iBAAiBmN,sDAGjBgH,GAAmBC,GACrBC,EAAQrU,KAAK,OAEXoU,GACFC,EAAQrU,KACN,iBAAiBoN,2DAGrBE,EAAOgH,KAAKD,EAAQpU,KAAK,MAG3ByP,GACE,IAAIlX,EAAAA,GACF,GAAG2U,aACH,KAAM,CAAGA,UAASC,aAAU,WAIlC,CASgB,SAAAmH,GACdC,EACArZ,GAEA,GAAoB,OAAhBqZ,GAA+C,oBAAhBA,EACjC,MAAMhE,GAAcrJ,OAAO,yBAE7BsN,EAAAA,EAAAA,IAAkBD,EAAarZ,EACjC,CAWM,SAAUuZ,GAAYC,IAC1BC,EAAAA,EAAAA,IAAgBD,EAClB,CCncA,MAEME,GAAa,2BASnB,IAAIC,GAAiD,KACrD,SAASC,KA2BP,OA1BKD,KACHA,GT5BJ,SAAgBpc,EAAM0U,GAA0D,IAAjD,QAAE4H,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAYtZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzE,MAAMsK,EAAUJ,UAAUK,KAAK1N,EAAM0U,GAC/BgI,EAAc1L,EAAKvD,GAoBzB,OAnBI8O,GACA9O,EAAQkF,iBAAiB,iBAAkBgK,IACvCJ,EAAQvL,EAAKvD,EAAQG,QAAS+O,EAAMC,WAAYD,EAAME,WAAY7L,EAAKvD,EAAQ2D,aAAcuL,EAAM,IAGvGL,GACA7O,EAAQkF,iBAAiB,WAAYgK,GAAUL,EAE/CK,EAAMC,WAAYD,EAAME,WAAYF,KAExCD,EACKrJ,MAAMyJ,IACHL,GACAK,EAAGnK,iBAAiB,SAAS,IAAM8J,MACnCD,GACAM,EAAGnK,iBAAiB,iBAAkBgK,GAAUH,EAASG,EAAMC,WAAYD,EAAME,WAAYF,IACjG,IAECzR,OAAM,SACJwR,CACX,CSKgBK,CAdA,8BACG,EAagC,CAC7CR,QAASA,CAACO,EAAIF,KAMZ,GACO,IADCA,EAEJ,IACEE,EAAGE,kBAAkBb,IACrB,MAAO7Z,GAIPwG,QAAQ8S,KAAKtZ,OAIpB4I,OAAM5I,IACP,MAAMwV,GAAcrJ,OAA0B,YAC5CwO,qBAAsB3a,EAAE2L,SACxB,KAGCmO,EACT,CAyBOpI,eAAekJ,GACpBrG,EACAsG,GAEA,IACE,MACMhL,SADWkK,MACHjL,YAAY+K,GAAY,aAChCpL,EAAcoB,EAAGpB,YAAYoL,UAC7BpL,EAAYqM,IAAID,EAAiBE,GAAWxG,UAC5C1E,EAAGG,KACT,MAAOhQ,GACP,GAAIA,aAAa4L,EAAAA,EACf0G,EAAOgH,KAAKtZ,EAAE2L,aACT,CACL,MAAMqP,EAAcxF,GAAcrJ,OAA2B,WAC3DwO,qBAAkC,OAAX3a,QAAA,IAAAA,OAAA,EAAAA,EAAa2L,UAEtC2G,EAAOgH,KAAK0B,EAAYrP,UAG9B,CAEA,SAASoP,GAAWxG,GAClB,MAAO,GAAGA,EAAI7W,QAAQ6W,EAAIpU,QAAQ8a,OACpC,OCzEaC,GAyBXzd,WAAAA,CAA6BkB,GAAA,KAASA,UAATA,EAT7B,KAAgBwc,iBAAiC,KAU/C,MAAM5G,EAAMpW,KAAKQ,UAAUiE,YAAY,OAAO1C,eAC9C/B,KAAKid,SAAW,IAAIC,GAAqB9G,GACzCpW,KAAKmd,wBAA0Bnd,KAAKid,SAASG,OAAOxK,MAAKzF,IACvDnN,KAAKgd,iBAAmB7P,EACjBA,KAWX,sBAAMyJ,WACJ,IACE,MAMMyG,EANiBrd,KAAKQ,UACzBiE,YAAY,mBACZ1C,eAI0B+R,wBACvBwJ,EAAOC,KACb,GAAyC,OAAhB,QAArBrb,EAAAlC,KAAKgd,wBAAgB,IAAA9a,OAAA,EAAAA,EAAEsb,cACzBxd,KAAKgd,uBAAyBhd,KAAKmd,wBAEM,OAAhB,QAArBvT,EAAA5J,KAAKgd,wBAAgB,IAAApT,OAAA,EAAAA,EAAE4T,aACzB,OAKJ,GACExd,KAAKgd,iBAAiBS,wBAA0BH,GAChDtd,KAAKgd,iBAAiBQ,WAAWjL,MAC/BmL,GAAuBA,EAAoBJ,OAASA,IAGtD,OAOA,GAJAtd,KAAKgd,iBAAiBQ,WAAW3W,KAAK,CAAEyW,OAAMD,UAK5Crd,KAAKgd,iBAAiBQ,WAAW7a,OA5EF,GA6E/B,CACA,MAAMgb,EAsMV,SACJH,GAEA,GAA0B,IAAtBA,EAAW7a,OACb,OAAQ,EAGV,IAAIgb,EAAuB,EACvBC,EAAwBJ,EAAW,GAAGF,KAE1C,IAAK,IAAItY,EAAI,EAAGA,EAAIwY,EAAW7a,OAAQqC,IACjCwY,EAAWxY,GAAGsY,KAAOM,IACvBA,EAAwBJ,EAAWxY,GAAGsY,KACtCK,EAAuB3Y,GAI3B,OAAO2Y,CACT,CAxNuCE,CAC3B7d,KAAKgd,iBAAiBQ,YAExBxd,KAAKgd,iBAAiBQ,WAAWM,OAAOH,EAAsB,GAIlE,OAAO3d,KAAKid,SAASc,UAAU/d,KAAKgd,kBACpC,MAAOnb,GACPsS,EAAOgH,KAAKtZ,IAWhB,yBAAMmc,SACJ,IAKE,GAJ8B,OAA1Bhe,KAAKgd,wBACDhd,KAAKmd,wBAI0B,OAAd,QAAvBjb,EAAAlC,KAAKgd,wBAAkB,IAAA9a,OAAA,EAAAA,EAAAsb,aACqB,IAA5Cxd,KAAKgd,iBAAiBQ,WAAW7a,OAEjC,MAAO,GAET,MAAM2a,EAAOC,MAEP,iBAAEU,EAAgB,cAAEC,YAmC9BC,GAC0B,IAA1BC,EAAO1b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GArJgB,KA4JvB,MAAMub,EAA4C,GAElD,IAAIC,EAAgBC,EAAgBE,QACpC,IAAK,MAAMX,KAAuBS,EAAiB,CAEjD,MAAMG,EAAiBL,EAAiBM,MACtCC,GAAMA,EAAGnB,QAAUK,EAAoBL,QAEzC,GAAKiB,GAgBH,GAHAA,EAAeG,MAAM5X,KAAK6W,EAAoBJ,MAG1CoB,GAAWT,GAAoBG,EAAS,CAC1CE,EAAeG,MAAME,MACrB,YAZF,GAJAV,EAAiBpX,KAAK,CACpBwW,MAAOK,EAAoBL,MAC3BoB,MAAO,CAACf,EAAoBJ,QAE1BoB,GAAWT,GAAoBG,EAAS,CAG1CH,EAAiBU,MACjB,MAaJT,EAAgBA,EAAcG,MAAM,GAEtC,MAAO,CACLJ,mBACAC,gBAEJ,CAhFkDU,CAC1C5e,KAAKgd,iBAAiBQ,YAElBqB,GAAe7W,EAAAA,EAAAA,IACnBiB,KAAK2C,UAAU,CAAEqI,QAAS,EAAGuJ,WAAYS,KAgB3C,OAbAje,KAAKgd,iBAAiBS,sBAAwBH,EAC1CY,EAAcvb,OAAS,GAEzB3C,KAAKgd,iBAAiBQ,WAAaU,QAI7Ble,KAAKid,SAASc,UAAU/d,KAAKgd,oBAEnChd,KAAKgd,iBAAiBQ,WAAa,GAE9Bxd,KAAKid,SAASc,UAAU/d,KAAKgd,mBAE7B6B,EACP,MAAOhd,GAEP,OADAsS,EAAOgH,KAAKtZ,GACL,KAKb,SAAS0b,KAGP,OAFc,IAAIhF,MAELuG,cAAc3U,UAAU,EAAG,GAC1C,OAkDa+S,GAEX5d,WAAAA,CAAmB8W,GAAA,KAAGA,IAAHA,EACjBpW,KAAK+e,wBAA0B/e,KAAKgf,+BAEtC,kCAAMA,GACJ,SAAKrS,EAAAA,EAAAA,QAGIE,EAAAA,EAAAA,MACJ+F,MAAK,KAAM,IACXnI,OAAM,KAAM,IAMnB,UAAM2S,GAEJ,SAD8Bpd,KAAK+e,wBAG5B,CACL,MAAME,QD5LL1L,eACL6C,GAEA,IACE,MACM1E,SADWkK,MACHjL,YAAY+K,IACpBvO,QAAeuE,EAAGpB,YAAYoL,IAAY3a,IAAI6b,GAAWxG,IAI/D,aADM1E,EAAGG,KACF1E,EACP,MAAOtL,GACP,GAAIA,aAAa4L,EAAAA,EACf0G,EAAOgH,KAAKtZ,EAAE2L,aACT,CACL,MAAMqP,EAAcxF,GAAcrJ,OAAyB,WACzDwO,qBAAkC,OAAX3a,QAAA,IAAAA,OAAA,EAAAA,EAAa2L,UAEtC2G,EAAOgH,KAAK0B,EAAYrP,UAG9B,CCuKuC0R,CAA4Blf,KAAKoW,KAClE,OAAsB,OAAlB6I,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzB,YACfyB,EAEA,CAAEzB,WAAY,IANvB,MAAO,CAAEA,WAAY,IAWzB,eAAMO,CAAUoB,SAEd,SAD8Bnf,KAAK+e,wBAG5B,CACL,MAAMK,QAAiCpf,KAAKod,OAC5C,OAAOX,GAA2Bzc,KAAKoW,IAAK,CAC1CqH,sBAEE,QADAvb,EAAAid,EAAiB1B,6BACjB,IAAAvb,EAAAA,EAAAkd,EAAyB3B,sBAC3BD,WAAY2B,EAAiB3B,cAKnC,SAAMxZ,CAAImb,SAER,SAD8Bnf,KAAK+e,wBAG5B,CACL,MAAMK,QAAiCpf,KAAKod,OAC5C,OAAOX,GAA2Bzc,KAAKoW,IAAK,CAC1CqH,sBAEE,QADAvb,EAAAid,EAAiB1B,6BACjB,IAAAvb,EAAAA,EAAAkd,EAAyB3B,sBAC3BD,WAAY,IACP4B,EAAyB5B,cACzB2B,EAAiB3B,gBAYxB,SAAUkB,GAAWP,GAEzB,OAAOnW,EAAAA,EAAAA,IAELiB,KAAK2C,UAAU,CAAEqI,QAAS,EAAGuJ,WAAYW,KACzCxb,MACJ,CC5RM,IAAiCoY,MCMhB,GDLrBxE,GACE,IAAIlX,EAAAA,GACF,mBACAmB,GAAa,IAAIqT,EAA0BrT,IAAU,YAIzD+V,GACE,IAAIlX,EAAAA,GACF,aACAmB,GAAa,IAAIuc,GAAqBvc,IAAU,YAMpD6Y,GAAgB/E,EAAMgF,EAASyB,IAE/B1B,GAAgB/E,EAAMgF,EAAS,WAE/BD,GAAgB,UAAW,iEEJtB,MAAM3Y,EAAsB,OAavB2e,GAAZ,SAAYA,GACVA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,kBACD,CAPD,CAAYA,IAAAA,EAOX,KAED,MAAMC,EAA2D,CAC/D,MAASD,EAASE,MAClB,QAAWF,EAASG,QACpB,KAAQH,EAASI,KACjB,KAAQJ,EAASK,KACjB,MAASL,EAASM,MAClB,OAAUN,EAASO,QAMfC,EAA4BR,EAASI,KAmBrCK,EAAgB,CACpB,CAACT,EAASE,OAAQ,MAClB,CAACF,EAASG,SAAU,MACpB,CAACH,EAASI,MAAO,OACjB,CAACJ,EAASK,MAAO,OACjB,CAACL,EAASM,OAAQ,SAQdI,EAAgC,SAACte,EAAUue,GAC/C,GAAIA,EAAUve,EAAS+Z,SACrB,OAEF,MAAMyE,GAAM,IAAI1H,MAAOuG,cACjBxL,EAASwM,EAAcE,GAC7B,IAAI1M,EAMF,MAAM,IAAInR,MACR,8DAA8D6d,MAPtD,QAAAxO,EAAA9O,UAAAC,OAN+CsO,EAAI,IAAAlO,MAAAyO,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJR,EAAIQ,EAAA,GAAA/O,UAAA+O,GAO7DpJ,QAAQiL,GACN,IAAI2M,OAASxe,EAASlC,WACnB0R,EAOT,QAEamD,EAOX9U,WAAAA,CAAmBC,GAAA,KAAIA,KAAJA,EAUX,KAAS2gB,UAAGL,EAsBZ,KAAWM,YAAeJ,EAc1B,KAAeK,gBAAsB,KA1C3C1f,EAAUmG,KAAK7G,MAQjB,YAAIwb,GACF,OAAOxb,KAAKkgB,UAGd,YAAI1E,CAASzD,GACX,KAAMA,KAAOsH,GACX,MAAM,IAAIgB,UAAU,kBAAkBtI,+BAExC/X,KAAKkgB,UAAYnI,EAInBwD,WAAAA,CAAYxD,GACV/X,KAAKkgB,UAA2B,kBAARnI,EAAmBuH,EAAkBvH,GAAOA,EAQtE,cAAIuI,GACF,OAAOtgB,KAAKmgB,YAEd,cAAIG,CAAWvI,GACb,GAAmB,oBAARA,EACT,MAAM,IAAIsI,UAAU,qDAEtBrgB,KAAKmgB,YAAcpI,EAOrB,kBAAIwI,GACF,OAAOvgB,KAAKogB,gBAEd,kBAAIG,CAAexI,GACjB/X,KAAKogB,gBAAkBrI,EAOzB1B,KAAAA,GAAwB,QAAArF,EAAAtO,UAAAC,OAAfsO,EAAe,IAAAlO,MAAAiO,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAfD,EAAeC,GAAAxO,UAAAwO,GACtBlR,KAAKogB,iBAAmBpgB,KAAKogB,gBAAgBpgB,KAAMqf,EAASE,SAAUtO,GACtEjR,KAAKmgB,YAAYngB,KAAMqf,EAASE,SAAUtO,GAE5CuP,GAAAA,GAAsB,QAAAnP,EAAA3O,UAAAC,OAAfsO,EAAe,IAAAlO,MAAAsO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfL,EAAeK,GAAA5O,UAAA4O,GACpBtR,KAAKogB,iBACHpgB,KAAKogB,gBAAgBpgB,KAAMqf,EAASG,WAAYvO,GAClDjR,KAAKmgB,YAAYngB,KAAMqf,EAASG,WAAYvO,GAE9CzH,IAAAA,GAAuB,QAAAiX,EAAA/d,UAAAC,OAAfsO,EAAe,IAAAlO,MAAA0d,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfzP,EAAeyP,GAAAhe,UAAAge,GACrB1gB,KAAKogB,iBAAmBpgB,KAAKogB,gBAAgBpgB,KAAMqf,EAASI,QAASxO,GACrEjR,KAAKmgB,YAAYngB,KAAMqf,EAASI,QAASxO,GAE3CkK,IAAAA,GAAuB,QAAAwF,EAAAje,UAAAC,OAAfsO,EAAe,IAAAlO,MAAA4d,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAf3P,EAAe2P,GAAAle,UAAAke,GACrB5gB,KAAKogB,iBAAmBpgB,KAAKogB,gBAAgBpgB,KAAMqf,EAASK,QAASzO,GACrEjR,KAAKmgB,YAAYngB,KAAMqf,EAASK,QAASzO,GAE3C3I,KAAAA,GAAwB,QAAAuY,EAAAne,UAAAC,OAAfsO,EAAe,IAAAlO,MAAA8d,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAf7P,EAAe6P,GAAApe,UAAAoe,GACtB9gB,KAAKogB,iBAAmBpgB,KAAKogB,gBAAgBpgB,KAAMqf,EAASM,SAAU1O,GACtEjR,KAAKmgB,YAAYngB,KAAMqf,EAASM,SAAU1O,IAIxC,SAAUsK,EAAYwF,GAC1BrgB,EAAUsgB,SAAQC,IAChBA,EAAK1F,YAAYwF,EAAM,GAE3B,CAEgB,SAAAzF,EACdD,EACArZ,GAEA,IAAK,MAAMP,KAAYf,EAAW,CAChC,IAAIwgB,EAAkC,KAClClf,GAAWA,EAAQ+e,QACrBG,EAAiB5B,EAAkBtd,EAAQ+e,QAG3Ctf,EAAS8e,eADS,OAAhBlF,EACwB,KAEA,SACxB5Z,EACAsf,GAEE,QAAAI,EAAAze,UAAAC,OADCsO,EAAe,IAAAlO,MAAAoe,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfnQ,EAAemQ,EAAA,GAAA1e,UAAA0e,GAElB,MAAM5T,EAAUyD,EACb3N,KAAI+d,IACH,GAAW,MAAPA,EACF,OAAO,KACF,GAAmB,kBAARA,EAChB,OAAOA,EACF,GAAmB,kBAARA,GAAmC,mBAARA,EAC3C,OAAOA,EAAI/U,WACN,GAAI+U,aAAelf,MACxB,OAAOkf,EAAI7T,QAEX,IACE,OAAOvE,KAAK2C,UAAUyV,GACtB,MAAOC,GACP,OAAO,SAIZle,QAAOie,GAAOA,IACdva,KAAK,KACJia,IAAwB,OAAdG,QAAc,IAAdA,EAAAA,EAAkBzf,EAAS+Z,WACvCH,EAAY,CACV0F,MAAO1B,EAAS0B,GAAOQ,cACvB/T,UACAyD,OACAxR,KAAMgC,EAASlC,MAGrB,EAGN","sources":["../../../node_modules/@firebase/component/src/component.ts","../../../node_modules/@firebase/component/src/constants.ts","../../../node_modules/@firebase/component/src/provider.ts","../../../node_modules/@firebase/component/src/component_container.ts","../../../node_modules/@firebase/util/dist/postinstall.mjs","../../../node_modules/@firebase/util/src/crypt.ts","../../../node_modules/@firebase/util/src/defaults.ts","../../../node_modules/@firebase/util/src/global.ts","../../../node_modules/@firebase/util/src/deferred.ts","../../../node_modules/@firebase/util/src/emulator.ts","../../../node_modules/@firebase/util/src/environment.ts","../../../node_modules/@firebase/util/src/errors.ts","../../../node_modules/@firebase/util/src/obj.ts","../../../node_modules/@firebase/util/src/compat.ts","../../../node_modules/idb/build/wrap-idb-value.js","../../../node_modules/idb/build/index.js","../../../node_modules/@firebase/app/src/platformLoggerService.ts","../../../node_modules/@firebase/app/src/logger.ts","../../../node_modules/@firebase/app/src/constants.ts","../../../node_modules/@firebase/app/src/internal.ts","../../../node_modules/@firebase/app/src/errors.ts","../../../node_modules/@firebase/app/src/firebaseApp.ts","../../../node_modules/@firebase/app/src/firebaseServerApp.ts","../../../node_modules/@firebase/app/src/api.ts","../../../node_modules/@firebase/app/src/indexeddb.ts","../../../node_modules/@firebase/app/src/heartbeatService.ts","../../../node_modules/@firebase/app/src/registerCoreComponents.ts","../../../node_modules/@firebase/app/src/index.ts","../../../node_modules/@firebase/logger/src/logger.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance!);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance!, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance!\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","const getDefaultsFromPostinstall = () => (undefined);\nexport { getDefaultsFromPostinstall };","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\nimport { getDefaultsFromPostinstall } from './postinstall';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromPostinstall() ||\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Type placeholder for `WorkerGlobalScope` from `webworker`\n */\ndeclare class WorkerGlobalScope {}\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' || isWebWorker();\n}\n\n/**\n * Detect Web Worker context.\n */\nexport function isWebWorker(): boolean {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    typeof self !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\n/**\n * Detect Cloudflare Worker context.\n */\nexport function isCloudflareWorker(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent === 'Cloudflare-Workers'\n  );\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as dataconnectName } from '../../../packages/data-connect/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [dataconnectName]: 'fire-data-connect',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp | null | undefined\n): obj is FirebaseServerApp {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\nimport { base64Decode } from '@firebase/util';\n\n// Parse the token and check to see if the `exp` claim is in the future.\n// Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n// the past.\nfunction validateTokenTTL(base64Token: string, tokenName: string): void {\n  const secondPart = base64Decode(base64Token.split('.')[1]);\n  if (secondPart === null) {\n    console.error(\n      `FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`\n    );\n    return;\n  }\n  const expClaim = JSON.parse(secondPart).exp;\n  if (expClaim === undefined) {\n    console.error(\n      `FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`\n    );\n    return;\n  }\n  const exp = JSON.parse(secondPart).exp * 1000;\n  const now = new Date().getTime();\n  const diff = exp - now;\n  if (diff <= 0) {\n    console.error(\n      `FirebaseServerApp ${tokenName} is invalid: the token has expired.`\n    );\n  }\n}\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object> | null;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    // Ensure that the current time is within the `authIdtoken` window of validity.\n    if (this._serverConfig.authIdToken) {\n      validateTokenTTL(this._serverConfig.authIdToken, 'authIdToken');\n    }\n\n    // Ensure that the current time is within the `appCheckToken` window of validity.\n    if (this._serverConfig.appCheckToken) {\n      validateTokenTTL(this._serverConfig.appCheckToken, 'appCheckToken');\n    }\n\n    this._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      this._finalizationRegistry = new FinalizationRegistry(() => {\n        this.automaticCleanup();\n      });\n    }\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined && this._finalizationRegistry !== null) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\nexport const MAX_NUM_STORED_HEARTBEATS = 30;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n\n        // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n        // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n        if (\n          this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS\n        ) {\n          const earliestHeartbeatIdx = getEarliestHeartbeatIdx(\n            this._heartbeatsCache.heartbeats\n          );\n          this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n        }\n      }\n\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n\n/**\n * Returns the index of the heartbeat with the earliest date.\n * If the heartbeats array is empty, -1 is returned.\n */\nexport function getEarliestHeartbeatIdx(\n  heartbeats: SingleDateHeartbeat[]\n): number {\n  if (heartbeats.length === 0) {\n    return -1;\n  }\n\n  let earliestHeartbeatIdx = 0;\n  let earliestHeartbeatDate = heartbeats[0].date;\n\n  for (let i = 1; i < heartbeats.length; i++) {\n    if (heartbeats[i].date < earliestHeartbeatDate) {\n      earliestHeartbeatDate = heartbeats[i].date;\n      earliestHeartbeatIdx = i;\n    }\n  }\n\n  return earliestHeartbeatIdx;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n"],"names":["Component","constructor","name","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","this","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","Deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","resolve","e","promise","getImmediate","options","optional","_a","Error","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","arguments","length","undefined","delete","services","Array","from","values","Promise","all","filter","service","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","_ref","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","stringToByteArray$1","str","out","p","i","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","console","error","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","getDefaultsFromEnvVariable","process","defaultsJsonString","JSON","parse","getDefaultsFromCookie","document","match","cookie","decoded","info","getDefaultEmulatorHostnameAndPort","productName","host","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","reject","wrapCallback","value","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","getUA","navigator","isBrowser","isWebWorker","WorkerGlobalScope","isSafari","forceEnvironment","prototype","toString","call","isNode","userAgent","includes","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","code","customData","super","setPrototypeOf","captureStackTrace","ErrorFactory","create","serviceName","errors","fullCode","template","data","PATTERN","_","key","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","aProp","bProp","isObject","thing","getModularInstance","_delegate","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","_len2","args","_key2","apply","unwrap","_len3","_key3","storeNames","_len","_key","tx","sort","transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","instanceOfAny","IDBRequest","success","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","async","storeName","store","index","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","version","logString","logger","Logger","PLATFORM_LOG_STRING","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","_apps","_serverApps","_components","_addComponent","app","debug","_addOrOverwriteComponent","_registerComponent","componentName","serverApp","_getProvider","heartbeatController","triggerHeartbeat","_removeServiceInstance","_isFirebaseApp","obj","_isFirebaseServerApp","settings","_clearComponents","clear","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","appName","validateTokenTTL","base64Token","tokenName","secondPart","split","Date","getTime","FirebaseServerAppImpl","serverConfig","apiKey","_serverConfig","authIdToken","appCheckToken","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","registerVersion","version$1","toJSON","refCount","register","decRefCount","deleteApp","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","initializeServerApp","_serverAppConfig","appOptions","nameObj","nameString","s","reduce","hash","Math","imul","getApp","getApps","cleanupProviders","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","earliestHeartbeatIdx","earliestHeartbeatDate","getEarliestHeartbeatIdx","splice","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","toISOString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","now","_logLevel","_logHandler","_userLogHandler","TypeError","logHandler","userLogHandler","log","_len4","_key4","_len5","_key5","_len6","_key6","level","forEach","inst","customLogLevel","_len7","_key7","arg","ignored","toLowerCase"],"sourceRoot":""}